{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"fun",
				"function"
			],
			[
				"stack",
				"stack_index\tint stack_index"
			],
			[
				"sta",
				"stack_index\tint stack_index"
			],
			[
				"STACK",
				"MAX_STACK\tMAX_STACK"
			],
			[
				"coffe",
				"coffee_machine_t\tcoffee_machine_t"
			],
			[
				"str",
				"string\tchar * string"
			],
			[
				"ch",
				"child\tcm_object_t * child"
			],
			[
				"CM_LO",
				"CM_LOG\tCM_LOG(message...)"
			],
			[
				"cm_prin",
				"cm_object_print\tvoid cm_object_print(cm_object_t *obj)"
			],
			[
				"cm_array_to",
				"cm_array_to_vec2\tvoid cm_array_to_vec2(cm_object_t *array)"
			],
			[
				"char",
				"char_count\tint * char_count"
			],
			[
				"lstr",
				"lstr_n\tchar [128] lstr_n"
			],
			[
				"CM_TR",
				"CM_TRACEERR\tCM_TRACEERR(message...)"
			],
			[
				"cm_object_add_",
				"cm_object_add_string\tcm_object_t * cm_object_add_string(cm_object_t *object, const char *name, const char *value)"
			],
			[
				"strle",
				"str_len\tint str_len"
			],
			[
				"obj",
				"object"
			],
			[
				"el_str",
				"el_str\tconst char * el_str"
			],
			[
				"print",
				"print_json_array"
			],
			[
				"Str",
				"string\tchar [256] string"
			],
			[
				"cha",
				"char_count"
			],
			[
				"check_nu",
				"check_null\tchar * check_null(const char *json_str)"
			],
			[
				"check_",
				"check_content\tchar * check_content(const char *json_str, int *len)"
			],
			[
				"CM_TN",
				"CM_TNUMBER\tCM_T_ CM_TNUMBER"
			],
			[
				"cm_bo",
				"cm_object_t\tcm_object_t"
			],
			[
				"st",
				"strtof\tfloat strtof(const char *restrict __nptr, char **restrict __endptr)"
			],
			[
				"n",
				"number\tfloat number"
			],
			[
				"cm_",
				"cm_tracelog\tvoid cm_tracelog(int mode, const char *func, const char *file, int line, const char *fmt, ...)"
			],
			[
				"CM_TRA",
				"CM_TRACELOG\tCM_TRACELOG(message...)"
			],
			[
				"json_",
				"json_str"
			],
			[
				"CM_A",
				"CM_ASSERT\tCM_ASSERT(s)"
			],
			[
				"json_str",
				"json_string"
			],
			[
				"CM_T",
				"CM_TRACELOG\tCM_TRACELOG(message...)"
			],
			[
				"coffee",
				"coffee-machine/json.h\t/home/canoi/Documentos/Projects/tinycoffee/external"
			],
			[
				"JSON_",
				"JSON_VEC2\tJSON_VEC2"
			],
			[
				"JSON_V",
				"JSON_VEC4\tJSON_VEC4"
			],
			[
				"json_vec",
				"json_vec2_t\tjson_vec2_t"
			],
			[
				"tc_Vec",
				"tc_Vec2\ttc_Vec2"
			],
			[
				"upd",
				"updatef\ttc_Field * updatef"
			],
			[
				"pre",
				"pre_draw\tPluginPreDraw pre_draw"
			],
			[
				"uer",
				"user_data\tvoid * user_data"
			],
			[
				"plugin",
				"plugin_manager\ttc_Field * plugin_manager"
			],
			[
				"tc_Fiel",
				"tc_Field\ttc_Field"
			],
			[
				"defa",
				"default_font\ttc_Font default_font"
			],
			[
				"tico_font_get",
				"tico_font_get_text_width\tint tico_font_get_text_width(tc_Font font, const char *text, int len)"
			],
			[
				"ImFont_Add",
				"ImFontAtlas_AddFontFromMemoryTTF\tImFont * ImFontAtlas_AddFontFromMemoryTTF(ImFontAtlas *self, void *font_data, int font_size, float size_pixels, const ImFontConfig *font_cfg, const ImWchar *glyph_ranges)"
			],
			[
				"ImFontAtlas_AddFont",
				"ImFontAtlas_AddFontFromMemoryTTF\tImFont * ImFontAtlas_AddFontFromMemoryTTF(ImFontAtlas *self, void *font_data, int font_size, float size_pixels, const ImFontConfig *font_cfg, const ImWchar *glyph_ranges)"
			],
			[
				"igPushSt",
				"igPushStyleVarVec2\tvoid igPushStyleVarVec2(ImGuiStyleVar idx, const ImVec2 val)"
			],
			[
				"ImDrawCornerFlags_BO",
				"ImDrawCornerFlags_BotRight\tImDrawCornerFlags_ ImDrawCornerFlags_BotRight"
			],
			[
				"ImGuiTreeNode",
				"ImGuiTreeNodeFlags_Framed\tImGuiTreeNodeFlags_ ImGuiTreeNodeFlags_Framed"
			],
			[
				"ImDrawAll",
				"ImDrawCornerFlags_All\tImDrawCornerFlags_ ImDrawCornerFlags_All"
			],
			[
				"color",
				"colorf\ttc_Field * colorf"
			],
			[
				"ImDrawCor",
				"ImDrawCornerFlags_All\tImDrawCornerFlags_ ImDrawCornerFlags_All"
			],
			[
				"tico_font_e",
				"tico_font_get_text_width\tint tico_font_get_text_width(tc_Font font, const char *text, int len)"
			],
			[
				"ImDrawList_AddRec",
				"ImDrawList_AddRectFilled\tvoid ImDrawList_AddRectFilled(ImDrawList *self, const ImVec2 p_min, const ImVec2 p_max, ImU32 col, float rounding, ImDrawCornerFlags rounding_corners)"
			],
			[
				"igColorEd",
				"igColorEdit4\tbool igColorEdit4(const char *label, float *col, ImGuiColorEditFlags flags)"
			],
			[
				"igGetDrawLi",
				"igGetWindowDrawList\tImDrawList * igGetWindowDrawList()"
			],
			[
				"ImTreeNode",
				"ImGuiTreeNodeFlags_FramePadding\tImGuiTreeNodeFlags_ ImGuiTreeNodeFlags_FramePadding"
			],
			[
				"igGetRectM",
				"igGetItemRectMin\tvoid igGetItemRectMin(ImVec2 *pOut)"
			],
			[
				"cJSON_GetA",
				"cJSON_GetArraySize\tint cJSON_GetArraySize(const cJSON *array)"
			],
			[
				"tic_prin",
				"tico_vec4_print\tvoid tico_vec4_print(const tc_Vec4 v)"
			],
			[
				"igColor",
				"igColorEdit4\tbool igColorEdit4(const char *label, float *col, ImGuiColorEditFlags flags)"
			],
			[
				"igColorConvert",
				"igColorConvertFloat4ToU32\tImU32 igColorConvertFloat4ToU32(const ImVec4 in)"
			],
			[
				"igConvert",
				"igColorConvertFloat4ToU32\tImU32 igColorConvertFloat4ToU32(const ImVec4 in)"
			],
			[
				"igCollapsing",
				"igCollapsingHeaderTreeNodeFlags\tbool igCollapsingHeaderTreeNodeFlags(const char *label, ImGuiTreeNodeFlags flags)"
			],
			[
				"igTreeNode",
				"igTreeNodeStr\tbool igTreeNodeStr(const char *label)"
			],
			[
				"igGetContent",
				"igGetContentRegionAvail\tvoid igGetContentRegionAvail(ImVec2 *pOut)"
			],
			[
				"igEnd",
				"igEndChild\tvoid igEndChild()"
			],
			[
				"field",
				"field_type\ttc_FieldType * field_type"
			],
			[
				"tico_seria",
				"tico_serialization_get_type\ttc_FieldType * tico_serialization_get_type(tc_Serialization *serial, const char *typename)"
			],
			[
				"tc_FI",
				"tc_FieldType\ttc_FieldType"
			],
			[
				"tico_field_circle_",
				"tico_field_circle_from_json\ttc_Field * tico_field_circle_from_json(cJSON *const json)"
			],
			[
				"ptr",
				"ptr_type\ttc_FieldType * ptr_type"
			],
			[
				"tc_Field",
				"tc_FieldType"
			],
			[
				"tico_field_string_",
				"tico_field_string_from_json\ttc_Field * tico_field_string_from_json(cJSON *const json)"
			],
			[
				"TIC_FIELD_TYPE_VEC",
				"TIC_FIELD_TYPE_VEC2\tTIC_FIELD_TYPE_ TIC_FIELD_TYPE_VEC2"
			],
			[
				"TIC_FIELD_N",
				"TIC_FIELD_TYPE_NUMBER\tTIC_FIELD_TYPE_ TIC_FIELD_TYPE_NUMBER"
			],
			[
				"imgu",
				"imgui\tImGuiField imgui"
			],
			[
				"c",
				"child\ttc_Field * child"
			],
			[
				"tico_field_set",
				"tico_field_set_circle"
			],
			[
				"igDragF",
				"igDragFloat\tbool igDragFloat(const char *label, float *v, float v_speed, float v_min, float v_max, const char *format, ImGuiSliderFlags flags)"
			],
			[
				"igInputfloat",
				"igInputFloat2\tbool igInputFloat2(const char *label, float *v, const char *format, ImGuiInputTextFlags flags)"
			],
			[
				"tc_Fie",
				"tc_Field\ttc_Field"
			],
			[
				"TIC_FIELD_TYPE_VE",
				"TIC_FIELD_TYPE_VEC2\tTIC_FIELD_TYPE_ TIC_FIELD_TYPE_VEC2"
			],
			[
				"tico_field_opt_n",
				"tico_field_to_opt_number\tfloat tico_field_to_opt_number(tc_Field *field, float opt)"
			],
			[
				"TIC_FIELNU",
				"TIC_FIELD_TYPE_NUMBER\tTIC_FIELD_TYPE_ TIC_FIELD_TYPE_NUMBER"
			],
			[
				"TIC_FIELD_TYPE_N",
				"TIC_FIELD_TYPE_NUMBER"
			],
			[
				"TIC_FIELD_T",
				"TIC_FIELD_TYPE_MAX\tTIC_FIELD_TYPE_ TIC_FIELD_TYPE_MAX"
			],
			[
				"fiel",
				"field_types\ttc_FieldFn [15] field_types"
			],
			[
				"tc_Fi",
				"tc_Field\ttc_Field"
			],
			[
				"cJSON_Ar",
				"cJSON_Array\tcJSON_Array"
			],
			[
				"cJSON_Arra",
				"cJSON_ArrayForEach\tcJSON_ArrayForEach(element, array)"
			],
			[
				"TIC_FIELD_TYPE_NU",
				"TIC_FIELD_TYPE_NUMBER\tTIC_FIELD_TYPE_ TIC_FIELD_TYPE_NUMBER"
			],
			[
				"cJ",
				"cJSON"
			],
			[
				"tc_Resou",
				"tc_Resource\ttc_Resource"
			],
			[
				"tc_met",
				"tc_MetaFn\ttc_MetaFn"
			],
			[
				"map_de",
				"map_deinit\tmap_deinit(m)"
			],
			[
				"tico_field_meta",
				"tico_field_meta_from_json\ttc_Meta * tico_field_meta_from_json(cJSON *json)"
			],
			[
				"map_ite",
				"map_iter\tmap_iter(m)"
			],
			[
				"map_set",
				"map_set\tmap_set(m, key, value)"
			],
			[
				"cJSON_Get",
				"cJSON_GetObjectItem\tcJSON * cJSON_GetObjectItem(const cJSON *const object, const char *const string)"
			],
			[
				"TIC_FIELD_V",
				"TIC_FIELD_VEC4\tTIC_FIELD_TYPE_ TIC_FIELD_VEC4"
			],
			[
				"tile",
				"tilesize\ttc_Vec2 tilesize"
			],
			[
				"tico_field_get_type",
				"tico_field_get_type_from_cjson\tint tico_field_get_type_from_cjson(cJSON *data)"
			],
			[
				"tico_field_get_type_from",
				"tico_field_get_type_from_typename\tint tico_field_get_type_from_typename(const char *typename)"
			],
			[
				"tico_field_type_from",
				"tico_field_type_from_cjson_type\tint tico_field_type_from_cjson_type(int cjson_type)"
			],
			[
				"tico_field_type_fr",
				"tico_field_get_type_from_typename\tint tico_field_get_type_from_typename(const char *typename)"
			],
			[
				"TIC_FIELD_RE",
				"TIC_FIELD_RECT"
			],
			[
				"tico_field_type",
				"tico_field_type_from_cjson_type\tint tico_field_type_from_cjson_type(int cjson_type)"
			],
			[
				"igCombo",
				"igComboStr_arr\tbool igComboStr_arr(const char *label, int *current_item, const char *const *items, int items_count, int popup_max_height_in_items)"
			],
			[
				"tico_field_create_re",
				"tico_field_create_resource\ttc_Field * tico_field_create_resource(const char *name, const char *res_name)"
			],
			[
				"tc_Resour",
				"tc_Resource\ttc_Resource"
			],
			[
				"tico_field_c",
				"tico_field_create\ttc_Field * tico_field_create(int type, const char *name)"
			],
			[
				"serializ",
				"serialization.h\t/home/canoi/Documentos/Projects/tinycoffee/include"
			],
			[
				"igGetConte",
				"igGetContentRegionAvail\tvoid igGetContentRegionAvail(ImVec2 *pOut)"
			],
			[
				"tico_field_create_vec",
				"tico_field_create_vec4\ttc_Field * tico_field_create_vec4(const char *name, tc_Vec4 value)"
			],
			[
				"tico_field_craet_ve",
				"tico_field_create_vec3\ttc_Field * tico_field_create_vec3(const char *name, tc_Vec3 value)"
			],
			[
				"TIC_FIELD_VE",
				"TIC_FIELD_VEC3\tTIC_FIELD_TYPE_ TIC_FIELD_VEC3"
			],
			[
				"tico_field_get_typ",
				"tico_field_get_type_from_typename\tint tico_field_get_type_from_typename(tc_Field *field, const char *typename)"
			],
			[
				"igColorPic",
				"igColorPicker4\tbool igColorPicker4(const char *label, float *col, ImGuiColorEditFlags flags, const float *ref_col)"
			],
			[
				"tc_Rect",
				"tc_Rectf\ttc_Rectf"
			],
			[
				"tc_Re",
				"tc_Rectf\ttc_Rectf"
			],
			[
				"list_",
				"list_field_t"
			],
			[
				"tcRect",
				"tc_Rectf\ttc_Rectf"
			],
			[
				"list_cl",
				"list_clear\tlist_clear(l)"
			],
			[
				"TIC_FIE",
				"TIC_FIELD_VEC2\tTIC_FIELD_TYPE_ TIC_FIELD_VEC2"
			],
			[
				"val",
				"valuedouble\tdouble valuedouble"
			],
			[
				"TRACE",
				"TRACELOG\tTRACELOG(message...)"
			],
			[
				"igSlideFloat",
				"igSliderFloat2\tbool igSliderFloat2(const char *label, float *v, float v_min, float v_max, const char *format, int flags)"
			]
		]
	},
	"buffers":
	[
		{
			"file": "main.c",
			"settings":
			{
				"buffer_size": 1213,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#ifndef CM_MACHINE_H\n#define CM_MACHINE_H\n\n// #include \"external/json.h\"\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define CM_VERSION \"0.1.0\"\n#define COFEE_MACHINE_VERSION CM_VERSION\n\n\n#ifndef CM_API\n  #if defined(_WIN32)\n    #if defined(BUILD_SHARE)\n      #define CM_API __declspec(dllexport)\n    #elif defined(USE_SHARED)\n      #define CM_API __declspec(dllimport)\n    #else\n      #define CM_API\n    #endif\n  #else\n    #define CM_API\n  #endif\n#endif\n\n#ifndef CM_MALLOC\n  #define CM_MALLOC malloc\n#endif\n#ifndef CM_FREE\n  #define CM_FREE free\n#endif\n#ifndef CM_CALLOC\n  #define CM_CALLOC calloc\n#endif\n#ifndef CM_REALLOC\n  #define CM_REALLOC realloc\n#endif\n\n#ifndef VEC2_TYPE\n  #define VEC2_TYPE cm_vec2_t\n#endif\n#ifndef VEC3_TYPE\n  #define VEC3_TYPE cm_vec3_t\n#endif\n#ifndef VEC4_TYPE\n  #define VEC4_TYPE cm_vec4_t\n#endif\n\n#define CM_STR(x) #x\n#define CM_ASSERT(s) if (!(s)) {CM_TRACELOG(\"Assertion '%s' failed\", CM_STR(s)); exit(-1);}\n\n#define CM_TRACEERR(message...) cm_tracelog(1, __FILE__, __PRETTY_FUNCTION__, __LINE__, message)\n#define CM_LOGERR(message...) cm_log(1, message)\n\n#define CM_TRACELOG(message...) cm_tracelog(0, __FILE__, __PRETTY_FUNCTION__, __LINE__, message)\n#define CM_LOG(message...) cm_log(0, message)\n\n#define cm_vec2(x, y) ((VEC2_TYPE){(x), (y)})\n#define cm_vec3(x, y, z) ((VEC3_TYPE){(x), (y), (z)})\n#define cm_vec4(x, y, z, w) ((VEC4_TYPE){(x), (y), (w), (w)})\n\n\n#define CM_META       \"__meta__\"\n#define CM_META_INDEX \"__index__\"\n#define CM_META_NAME  \"__name__\"\n#define CM_META_TYPE  \"__type__\"\n\n\n#define cm_vec_t(n) \\\n  struct cm_vec##n##_t { \\\n    float data[n]; \\\n  }\n\ntypedef cm_vec_t(2) cm_vec2_t;\ntypedef cm_vec_t(3) cm_vec3_t;\ntypedef cm_vec_t(4) cm_vec4_t;\ntypedef int cm_bool_t;\n\n#define cm_object_foreach(element, array) for(element = (array != NULL) ? (array)->child : NULL; element != NULL; element = element->next)\n#define cm_object_parent(element) (element ? element->parent : NULL);\n\n#define CM_FUNCTION_DEF(func_name, ...) \\\nfunc_name (cm_object_t *type, __VA_ARGS__)\n\n// CM_API cm_object_t* cm_##name_p##_from_json(cJSON *json); \\\n// CM_API cJSON* cm_##name_p##_to_json(cm_object_t *object, int export_meta);\n#define CM_TDEF(name_p, type_t) \\\nCM_API cm_object_t* cm_create_##name_p(type_t value); \\\nCM_API type_t cm_object_get_##name_p(cm_object_t *object, const char *name); \\\nCM_API type_t cm_object_get_opt_##name_p(cm_object_t *object, const char *name, type_t opt); \\\nCM_API cm_object_t* cm_object_add_##name_p(cm_object_t *object, const char *name, type_t value); \\\nCM_API type_t cm_object_to_##name_p(cm_object_t *object); \\\nCM_API type_t cm_object_to_opt_##name_p(cm_object_t *object, type_t value); \\\nCM_API void cm_object_set_##name_p(cm_object_t *object, type_t value); \\\n\n\n\ntypedef struct cm_object_t cm_object_t;\n// typedef struct cm_coffee_t cm_coffee_t;\ntypedef int(*cm_function)(cm_object_t*);\n\ntypedef enum {\n  CM_TNULL = 0,\n  CM_TNUMBER,\n  CM_TSTRING,\n  CM_TBOOLEAN,\n  CM_TVEC2,\n  CM_TVEC3,\n  CM_TVEC4,\n  CM_TARRAY,\n  CM_TTABLE,\n  CM_TUSERDATA,\n  CM_TFUNCTION,\n  CM_TREFERENCE,\n  CM_TMAX\n} CM_T_;\n\n#define MAX_STACK 256\n\ntypedef struct cm_hashmap_t {\n\n} cm_hashmap_t;\n\ntypedef struct coffee_machine_t {\n  cm_object_t *root;\n  cm_object_t *gc;\n\n  cm_object_t* stack[MAX_STACK];\n  int stack_index;\n\n  const char*(*read_file)(const char *, const char*);\n  void(*write_file)(const char *, const char *, size_t, const char*);\n} coffee_machine_t;\n\nstruct cm_object_t {\n  CM_T_ type;\n  int mark;\n  char *name;\n  cm_object_t *meta;\n\n  union {\n    float number;\n    char *string;\n    int boolean;\n    VEC2_TYPE vec2;\n    VEC3_TYPE vec3;\n    VEC4_TYPE vec4;\n    void *userdata;\n    cm_function func;\n    cm_object_t *ref;\n  };\n\n  cm_object_t *prev;\n  cm_object_t *next;\n  cm_object_t *parent;\n  cm_object_t *child;\n};\n\n#if defined(__cplusplus)\nextern \"C\" {\n#endif\n\n/*=====================*\n *         VM          *\n *=====================*/\n\nCM_API int cm_init();\nCM_API void cm_deinit();\nCM_API coffee_machine_t* cm_get_vm();\nCM_API void cm_gc();\n\nCM_API const char* cm_version();\n\nCM_API cm_object_t* cm_get_type(const char *type_name);\nCM_API cm_object_t* cm_set_type(const char *type_name, cm_object_t *type);\n\nCM_API cm_object_t* cm_get_object(const char *name);\nCM_API cm_object_t* cm_set_object(const char *name, cm_object_t *object);\n\nCM_API void cm_push(coffee_machine_t *vm, cm_object_t *obj);\nCM_API cm_object_t *cm_pop(coffee_machine_t *vm);\n\nCM_API void cm_newtable(coffee_machine_t *vm);\nCM_API void cm_setmetatable(coffee_machine_t *vm);\nCM_API void cm_getmetatable(coffee_machine_t *vm);\n\nCM_API void cm_pushnumber(coffee_machine_t *vm);\nCM_API void cm_pushstring(coffee_machine_t *vm);\nCM_API void cm_pushboolean(coffee_machine_t *vm);\nCM_API void cm_pushvec2(coffee_machine_t *vm);\nCM_API void cm_pushvec3(coffee_machine_t *vm);\nCM_API void cm_pushvec4(coffee_machine_t *vm);\n// CM_API void cm_pushtable(coffee_machine_t *vm);\nCM_API void cm_pushvalue(coffee_machine_t *vm);\n\nCM_API float cm_tonumber(coffee_machine_t *vm);\nCM_API const char* cm_tostring(coffee_machine_t *vm);\nCM_API int cm_toboolean(coffee_machine_t *vm);\nCM_API VEC2_TYPE cm_tovec2(coffee_machine_t *vm);\nCM_API VEC3_TYPE cm_tovec3(coffee_machine_t *vm);\nCM_API VEC4_TYPE cm_tovec4(coffee_machine_t *vm);\nCM_API cm_object_t* cm_toobject(coffee_machine_t *vm);\nCM_API void *cm_touserdata(coffee_machine_t *vm);\n\n/*======================*\n *        Coffee        *\n *======================*/\n\nCM_API cm_object_t* cm_parse_json(const char *json_string);\n// CM_API cm_object_t* cm_load_coffee_from_json(const char *json_string);\nCM_API const char* cm_print_json(cm_object_t *object, int *char_count_out);\nCM_API cm_object_t* cm_json_to_coffee(cm_object_t *object);\n\nCM_API cm_object_t* cm_parse_coffee(const char *coffee_string);\nCM_API const char* cm_print_coffee(cm_object_t *object);\n\nCM_API void cm_object_get_uid(cm_object_t *obj, char *out);\n\nCM_API void cm_object_print(cm_object_t *obj);\n\nCM_API cm_object_t* cm_object_create(CM_T_ type);\nCM_API cm_object_t* cm_object_load(const char *path);\nCM_API cm_object_t* cm_object_clone(cm_object_t *obj);\nCM_API cm_object_t* cm_object_replace(cm_object_t *obj, const char *name, cm_object_t *new_item);\n// CM_API cm_object_t* cm_object_load_from_\n// CM_API cm_object_t* cm_object_from_json(cJSON *const json);\nCM_API void cm_object_remove(cm_object_t *object, const char *name);\nCM_API void cm_object_delete(cm_object_t *object);\nCM_API void cm_object_clear(cm_object_t *object);\n\nCM_API void cm_object_update_meta(cm_object_t *object);\nCM_API void cm_object_set_meta(cm_object_t *object, cm_object_t *meta);\nCM_API cm_object_t* cm_object_get_meta(cm_object_t *object);\nCM_API void cm_object_set_type(cm_object_t *object, CM_T_ type);\nCM_API CM_T_ cm_object_get_type(cm_object_t *object);\n\nCM_API void cm_object_set_name(cm_object_t *object, const char *name);\nCM_API const char* cm_object_get_name(cm_object_t *object);\n\nCM_API cm_object_t* cm_object_get(cm_object_t *object, const char *name);\nCM_API cm_object_t* cm_object_set(cm_object_t *object, const char *name, cm_object_t *item);\nCM_API void cm_object_push(cm_object_t *object, int index, cm_object_t *item);\nCM_API cm_object_t* cm_object_pop(cm_object_t *object);\nCM_API cm_object_t* cm_object_add(cm_object_t *object, const char *name, cm_object_t *item);\nCM_API int cm_object_length(cm_object_t *object);\n\nCM_API void cm_array_to_vec2(cm_object_t *array);\nCM_API void cm_array_to_vec3(cm_object_t *array);\nCM_API void cm_array_to_vec4(cm_object_t *array);\n\nCM_API cm_object_t* cm_vec2_from_array(cm_object_t *array);\nCM_API cm_object_t* cm_vec3_from_array(cm_object_t *array);\nCM_API cm_object_t* cm_vec4_from_array(cm_object_t *array);\n\nCM_TDEF(number, float);\nCM_TDEF(string, const char*);\nCM_TDEF(boolean, int);\nCM_TDEF(vec2, VEC2_TYPE);\nCM_TDEF(vec3, VEC3_TYPE);\nCM_TDEF(vec4, VEC4_TYPE);\nCM_TDEF(array, cm_object_t*);\nCM_TDEF(table, cm_object_t*);\nCM_TDEF(userdata, void*);\nCM_TDEF(function, cm_function);\nCM_TDEF(reference, cm_object_t*);\n\n/*===============*\n *     Debug     *\n *===============*/\n\nCM_API void cm_tracelog(int mode, const char *func, const char *file, int line, const char *fmt, ...);\nCM_API void cm_log(int mode, const char *fmt, ...);\n\n#if defined(__cplusplus)\n}\n#endif\n\n#endif",
			"file": "coffee.h",
			"file_size": 8274,
			"file_write_time": 132494962663853389,
			"settings":
			{
				"buffer_size": 8274,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "coffee.c",
			"settings":
			{
				"buffer_size": 45182,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "coffee-machine.sublime-project",
			"settings":
			{
				"buffer_size": 120,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Makefile",
			"settings":
			{
				"buffer_size": 149,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": ".gitignore",
			"settings":
			{
				"buffer_size": 32,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "tilemap.json",
			"settings":
			{
				"buffer_size": 537,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "project.tico",
			"settings":
			{
				"buffer_size": 648,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "teste.json",
			"settings":
			{
				"buffer_size": 327,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "transform.coffee",
			"settings":
			{
				"buffer_size": 119,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Make",
					""
				],
				[
					"Make",
					"Clean"
				],
				[
					"Make",
					"Linux"
				],
				[
					"Make",
					"Windows"
				],
				[
					"Make",
					"Linux Release"
				],
				[
					"Make",
					"Windows Release"
				],
				[
					"Make",
					"Run"
				],
				[
					"Make",
					"Release"
				]
			],
			[
				"Make",
				""
			]
		],
		[
			[
				[
					"Make",
					""
				],
				[
					"Make",
					"Linux"
				],
				[
					"Make",
					"Windows"
				],
				[
					"Make",
					"Linux Release"
				],
				[
					"Make",
					"Windows Release"
				]
			],
			[
				"Make",
				"Linux"
			]
		],
		[
			[
				[
					"Make",
					""
				],
				[
					"Make",
					"Linux"
				],
				[
					"Make",
					"Windows"
				],
				[
					"Make",
					"Linux Release"
				],
				[
					"Make",
					"Windows Release"
				],
				[
					"Make",
					"Run"
				]
			],
			[
				"Make",
				"Run"
			]
		],
		[
			[
				[
					"Make",
					""
				],
				[
					"Make",
					"Linux"
				],
				[
					"Make",
					"Windows"
				],
				[
					"Make",
					"Linux Release"
				],
				[
					"Make",
					"Windows Release"
				],
				[
					"Make",
					"Run"
				],
				[
					"Make",
					"Clean"
				]
			],
			[
				"Make",
				"Run"
			]
		],
		[
			[
				[
					"Make",
					""
				],
				[
					"Make",
					"Linux"
				],
				[
					"Make",
					"Windows"
				],
				[
					"Make",
					"Linux Release"
				],
				[
					"Make",
					"Windows Release"
				],
				[
					"Make",
					"Run"
				],
				[
					"Make",
					"Release"
				]
			],
			[
				"Make",
				""
			]
		],
		[
			[
				[
					"tico (Linux)",
					""
				],
				[
					"tico (Linux)",
					"clean"
				],
				[
					"tico (Linux)",
					"rebuild_cache"
				],
				[
					"tico (Linux)",
					"tico"
				],
				[
					"tico (Linux)",
					"main.o"
				],
				[
					"tico (Linux)",
					"main.i"
				],
				[
					"tico (Linux)",
					"main.s"
				]
			],
			[
				"tico (Linux)",
				""
			]
		],
		[
			[
				[
					"tico (Linux)",
					""
				],
				[
					"tico (Linux)",
					"clean"
				],
				[
					"tico (Linux)",
					"rebuild_cache"
				],
				[
					"tico (Linux)",
					"tico"
				],
				[
					"tico (Linux)",
					"main.o"
				],
				[
					"tico (Linux)",
					"main.i"
				],
				[
					"tico (Linux)",
					"main.s"
				],
				[
					"tico (Linux)",
					"src/graphics.o"
				],
				[
					"tico (Linux)",
					"src/graphics.i"
				],
				[
					"tico (Linux)",
					"src/graphics.s"
				]
			],
			[
				"tico (Linux)",
				""
			]
		],
		[
			[
				[
					"tico (Linux)",
					""
				],
				[
					"tico (Linux)",
					"clean"
				],
				[
					"tico (Linux)",
					"rebuild_cache"
				],
				[
					"tico (Linux)",
					"tico_lib"
				],
				[
					"tico (Linux)",
					"tico"
				],
				[
					"tico (Linux)",
					"gl3w"
				],
				[
					"tico (Linux)",
					"lua"
				],
				[
					"tico (Linux)",
					"glfw"
				],
				[
					"tico (Linux)",
					"cimgui"
				],
				[
					"tico (Linux)",
					"external/GL/gl3w.o"
				],
				[
					"tico (Linux)",
					"external/GL/gl3w.i"
				],
				[
					"tico (Linux)",
					"external/GL/gl3w.s"
				],
				[
					"tico (Linux)",
					"external/cimgui/cimgui.o"
				],
				[
					"tico (Linux)",
					"external/cimgui/cimgui.i"
				],
				[
					"tico (Linux)",
					"external/cimgui/cimgui.s"
				],
				[
					"tico (Linux)",
					"external/cimgui/imgui/examples/imgui_impl_glfw.o"
				],
				[
					"tico (Linux)",
					"external/cimgui/imgui/examples/imgui_impl_glfw.i"
				],
				[
					"tico (Linux)",
					"external/cimgui/imgui/examples/imgui_impl_glfw.s"
				],
				[
					"tico (Linux)",
					"external/cimgui/imgui/examples/imgui_impl_opengl3.o"
				],
				[
					"tico (Linux)",
					"external/cimgui/imgui/examples/imgui_impl_opengl3.i"
				],
				[
					"tico (Linux)",
					"external/cimgui/imgui/examples/imgui_impl_opengl3.s"
				],
				[
					"tico (Linux)",
					"external/cimgui/imgui/imgui.o"
				],
				[
					"tico (Linux)",
					"external/cimgui/imgui/imgui.i"
				],
				[
					"tico (Linux)",
					"external/cimgui/imgui/imgui.s"
				],
				[
					"tico (Linux)",
					"external/cimgui/imgui/imgui_demo.o"
				],
				[
					"tico (Linux)",
					"external/cimgui/imgui/imgui_demo.i"
				],
				[
					"tico (Linux)",
					"external/cimgui/imgui/imgui_demo.s"
				],
				[
					"tico (Linux)",
					"external/cimgui/imgui/imgui_draw.o"
				],
				[
					"tico (Linux)",
					"external/cimgui/imgui/imgui_draw.i"
				],
				[
					"tico (Linux)",
					"external/cimgui/imgui/imgui_draw.s"
				],
				[
					"tico (Linux)",
					"external/cimgui/imgui/imgui_widgets.o"
				],
				[
					"tico (Linux)",
					"external/cimgui/imgui/imgui_widgets.i"
				],
				[
					"tico (Linux)",
					"external/cimgui/imgui/imgui_widgets.s"
				],
				[
					"tico (Linux)",
					"external/cjson/cJSON.o"
				],
				[
					"tico (Linux)",
					"external/cjson/cJSON.i"
				],
				[
					"tico (Linux)",
					"external/cjson/cJSON.s"
				],
				[
					"tico (Linux)",
					"external/glfw/src/context.o"
				],
				[
					"tico (Linux)",
					"external/glfw/src/context.i"
				],
				[
					"tico (Linux)",
					"external/glfw/src/context.s"
				],
				[
					"tico (Linux)",
					"external/glfw/src/egl_context.o"
				],
				[
					"tico (Linux)",
					"external/glfw/src/egl_context.i"
				],
				[
					"tico (Linux)",
					"external/glfw/src/egl_context.s"
				],
				[
					"tico (Linux)",
					"external/glfw/src/glx_context.o"
				],
				[
					"tico (Linux)",
					"external/glfw/src/glx_context.i"
				],
				[
					"tico (Linux)",
					"external/glfw/src/glx_context.s"
				],
				[
					"tico (Linux)",
					"external/glfw/src/init.o"
				],
				[
					"tico (Linux)",
					"external/glfw/src/init.i"
				],
				[
					"tico (Linux)",
					"external/glfw/src/init.s"
				],
				[
					"tico (Linux)",
					"external/glfw/src/input.o"
				],
				[
					"tico (Linux)",
					"external/glfw/src/input.i"
				],
				[
					"tico (Linux)",
					"external/glfw/src/input.s"
				],
				[
					"tico (Linux)",
					"external/glfw/src/linux_joystick.o"
				],
				[
					"tico (Linux)",
					"external/glfw/src/linux_joystick.i"
				],
				[
					"tico (Linux)",
					"external/glfw/src/linux_joystick.s"
				],
				[
					"tico (Linux)",
					"external/glfw/src/monitor.o"
				],
				[
					"tico (Linux)",
					"external/glfw/src/monitor.i"
				],
				[
					"tico (Linux)",
					"external/glfw/src/monitor.s"
				],
				[
					"tico (Linux)",
					"external/glfw/src/osmesa_context.o"
				],
				[
					"tico (Linux)",
					"external/glfw/src/osmesa_context.i"
				],
				[
					"tico (Linux)",
					"external/glfw/src/osmesa_context.s"
				],
				[
					"tico (Linux)",
					"external/glfw/src/posix_thread.o"
				],
				[
					"tico (Linux)",
					"external/glfw/src/posix_thread.i"
				],
				[
					"tico (Linux)",
					"external/glfw/src/posix_thread.s"
				],
				[
					"tico (Linux)",
					"external/glfw/src/posix_time.o"
				],
				[
					"tico (Linux)",
					"external/glfw/src/posix_time.i"
				],
				[
					"tico (Linux)",
					"external/glfw/src/posix_time.s"
				],
				[
					"tico (Linux)",
					"external/glfw/src/vulkan.o"
				],
				[
					"tico (Linux)",
					"external/glfw/src/vulkan.i"
				],
				[
					"tico (Linux)",
					"external/glfw/src/vulkan.s"
				],
				[
					"tico (Linux)",
					"external/glfw/src/window.o"
				],
				[
					"tico (Linux)",
					"external/glfw/src/window.i"
				],
				[
					"tico (Linux)",
					"external/glfw/src/window.s"
				],
				[
					"tico (Linux)",
					"external/glfw/src/x11_init.o"
				],
				[
					"tico (Linux)",
					"external/glfw/src/x11_init.i"
				],
				[
					"tico (Linux)",
					"external/glfw/src/x11_init.s"
				],
				[
					"tico (Linux)",
					"external/glfw/src/x11_monitor.o"
				],
				[
					"tico (Linux)",
					"external/glfw/src/x11_monitor.i"
				],
				[
					"tico (Linux)",
					"external/glfw/src/x11_monitor.s"
				],
				[
					"tico (Linux)",
					"external/glfw/src/x11_window.o"
				],
				[
					"tico (Linux)",
					"external/glfw/src/x11_window.i"
				],
				[
					"tico (Linux)",
					"external/glfw/src/x11_window.s"
				],
				[
					"tico (Linux)",
					"external/glfw/src/xkb_unicode.o"
				],
				[
					"tico (Linux)",
					"external/glfw/src/xkb_unicode.i"
				],
				[
					"tico (Linux)",
					"external/glfw/src/xkb_unicode.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/lapi.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/lapi.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/lapi.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/lauxlib.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/lauxlib.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/lauxlib.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/lbaselib.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/lbaselib.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/lbaselib.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/lcode.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/lcode.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/lcode.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/lcorolib.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/lcorolib.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/lcorolib.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/lctype.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/lctype.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/lctype.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/ldblib.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/ldblib.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/ldblib.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/ldebug.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/ldebug.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/ldebug.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/ldo.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/ldo.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/ldo.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/ldump.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/ldump.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/ldump.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/lfunc.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/lfunc.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/lfunc.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/lgc.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/lgc.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/lgc.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/linit.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/linit.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/linit.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/liolib.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/liolib.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/liolib.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/llex.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/llex.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/llex.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/lmathlib.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/lmathlib.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/lmathlib.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/lmem.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/lmem.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/lmem.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/loadlib.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/loadlib.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/loadlib.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/lobject.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/lobject.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/lobject.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/lopcodes.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/lopcodes.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/lopcodes.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/loslib.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/loslib.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/loslib.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/lparser.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/lparser.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/lparser.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/lstate.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/lstate.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/lstate.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/lstring.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/lstring.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/lstring.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/lstrlib.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/lstrlib.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/lstrlib.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/ltable.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/ltable.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/ltable.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/ltablib.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/ltablib.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/ltablib.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/ltm.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/ltm.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/ltm.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/lua.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/lua.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/lua.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/luac.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/luac.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/luac.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/lundump.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/lundump.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/lundump.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/lutf8lib.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/lutf8lib.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/lutf8lib.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/lvm.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/lvm.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/lvm.s"
				],
				[
					"tico (Linux)",
					"external/lua/src/lzio.o"
				],
				[
					"tico (Linux)",
					"external/lua/src/lzio.i"
				],
				[
					"tico (Linux)",
					"external/lua/src/lzio.s"
				],
				[
					"tico (Linux)",
					"external/map.o"
				],
				[
					"tico (Linux)",
					"external/map.i"
				],
				[
					"tico (Linux)",
					"external/map.s"
				],
				[
					"tico (Linux)",
					"external/vec.o"
				],
				[
					"tico (Linux)",
					"external/vec.i"
				],
				[
					"tico (Linux)",
					"external/vec.s"
				],
				[
					"tico (Linux)",
					"external/zip/src/zip.o"
				],
				[
					"tico (Linux)",
					"external/zip/src/zip.i"
				],
				[
					"tico (Linux)",
					"external/zip/src/zip.s"
				],
				[
					"tico (Linux)",
					"main.o"
				],
				[
					"tico (Linux)",
					"main.i"
				],
				[
					"tico (Linux)",
					"main.s"
				],
				[
					"tico (Linux)",
					"src/audio.o"
				],
				[
					"tico (Linux)",
					"src/audio.i"
				],
				[
					"tico (Linux)",
					"src/audio.s"
				],
				[
					"tico (Linux)",
					"src/core.o"
				],
				[
					"tico (Linux)",
					"src/core.i"
				],
				[
					"tico (Linux)",
					"src/core.s"
				],
				[
					"tico (Linux)",
					"src/engine.o"
				],
				[
					"tico (Linux)",
					"src/engine.i"
				],
				[
					"tico (Linux)",
					"src/engine.s"
				],
				[
					"tico (Linux)",
					"src/filesystem.o"
				],
				[
					"tico (Linux)",
					"src/filesystem.i"
				],
				[
					"tico (Linux)",
					"src/filesystem.s"
				],
				[
					"tico (Linux)",
					"src/graphics.o"
				],
				[
					"tico (Linux)",
					"src/graphics.i"
				],
				[
					"tico (Linux)",
					"src/graphics.s"
				],
				[
					"tico (Linux)",
					"src/input.o"
				],
				[
					"tico (Linux)",
					"src/input.i"
				],
				[
					"tico (Linux)",
					"src/input.s"
				],
				[
					"tico (Linux)",
					"src/json.o"
				],
				[
					"tico (Linux)",
					"src/json.i"
				],
				[
					"tico (Linux)",
					"src/json.s"
				],
				[
					"tico (Linux)",
					"src/plugin.o"
				],
				[
					"tico (Linux)",
					"src/plugin.i"
				],
				[
					"tico (Linux)",
					"src/plugin.s"
				],
				[
					"tico (Linux)",
					"src/render.o"
				],
				[
					"tico (Linux)",
					"src/render.i"
				],
				[
					"tico (Linux)",
					"src/render.s"
				],
				[
					"tico (Linux)",
					"src/tico_math.o"
				],
				[
					"tico (Linux)",
					"src/tico_math.i"
				],
				[
					"tico (Linux)",
					"src/tico_math.s"
				],
				[
					"tico (Linux)",
					"src/timer.o"
				],
				[
					"tico (Linux)",
					"src/timer.i"
				],
				[
					"tico (Linux)",
					"src/timer.s"
				],
				[
					"tico (Linux)",
					"src/window.o"
				],
				[
					"tico (Linux)",
					"src/window.i"
				],
				[
					"tico (Linux)",
					"src/window.s"
				]
			],
			[
				"tico (Linux)",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"c",
				"CMakeBuilder: Clear Cache"
			],
			[
				"clear",
				"CMakeBuilder: Clear Cache"
			],
			[
				"cma",
				"CMakeBuilder: Clear Cache"
			],
			[
				"cmake c",
				"CMakeBuilder: Clear Cache"
			],
			[
				"clear cha",
				"CMakeBuilder: Clear Cache"
			],
			[
				"cmac",
				"CMakeBuilder: Clear Cache"
			],
			[
				"cmake cl",
				"CMakeBuilder: Clear Cache"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"cmak",
				"Set Syntax: CMake"
			],
			[
				"sche",
				"UI: Select Color Scheme"
			],
			[
				"scheme",
				"UI: Select Color Scheme"
			],
			[
				"theme",
				"UI: Select Color Scheme"
			],
			[
				"settings",
				"Preferences: Settings"
			],
			[
				"men",
				"View: Toggle Menu"
			],
			[
				"menu",
				"View: Toggle Menu"
			],
			[
				"preview",
				"Markdown Preview: Preview in Browser"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": false,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/canoi/Documentos/Projects/coffee-machine"
	],
	"file_history":
	[
		"/home/canoi/Documentos/Projects/coffee-machine/bora.json",
		"/home/canoi/Documentos/Projects/tinycoffee/external/coffee-machine/external/json.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/table.h",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/assets/sprites/lizard.json",
		"/home/canoi/Documentos/Projects/tinycoffee/external/lua/src/lparser.c",
		"/home/canoi/Documentos/Projects/tinycoffee/include/tico.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/serialization.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/resources.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/resources/tilemap.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/resources/json.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/resources/tileset.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/resources/object.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/resources/image.h",
		"/home/canoi/Documentos/Projects/tinycoffee/src/serialization.c",
		"/home/canoi/Documentos/Projects/tinycoffee/src/json.c",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/editor/widgets/object.h",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/systems/spritesystem.lua",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/editor/tilemap.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/editor/object.h",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/assets/objects/floor.json",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/project.tico",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/assets/objects/lizard.json",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/assets/tilesets/tileset.json",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/assets/objects/player.json",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/assets/objects/teste.json",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/assets/sprites/player.json",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/assets/tilemaps/tilemap.json",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/assets/tilesets/tileset-1.json",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/main.lua",
		"/home/canoi/Documentos/Projects/tinycoffee/include/tico_imgui.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/editor.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/lua/resources.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/engine.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/audio.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/timer.h",
		"/home/canoi/Documentos/Projects/tinycoffee/src/timer.c",
		"/home/canoi/Documentos/Projects/tinycoffee/src/render.c",
		"/home/canoi/Documentos/Projects/tinycoffee/include/render.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/lua/engine.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/editor/panel.h",
		"/home/canoi/Documentos/Projects/tinycoffee/src/graphics.c",
		"/home/canoi/Documentos/Projects/tinycoffee/main.c",
		"/home/canoi/Documentos/Projects/tinycoffee/bin/project.tico",
		"/home/canoi/Documentos/Projects/tinycoffee/include/definitions.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/input.h",
		"/home/canoi/Documentos/Projects/tinycoffee/src/input.c",
		"/home/canoi/Documentos/Projects/tinycoffee/include/json.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/filesystem.h",
		"/home/canoi/Documentos/Projects/tinycoffee/src/filesystem.c",
		"/home/canoi/Documentos/Projects/tinycoffee/include/tico_math.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/tico_opengl.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/utils.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/graphics.h",
		"/home/canoi/Documentos/Projects/tinycoffee/src/tico_math.c",
		"/home/canoi/Documentos/Projects/tinycoffee/CMakeLists.txt",
		"/home/canoi/Documentos/Projects/tinycoffee/tico.sublime-project",
		"/home/canoi/Documentos/Projects/tinycoffee/glfw.c",
		"/home/canoi/Documentos/Projects/tinycoffee/include/window.h",
		"/home/canoi/Documentos/Projects/tinycoffee/src/core.c",
		"/home/canoi/Documentos/Projects/tinycoffee/src/audio.c",
		"/home/canoi/Documentos/Projects/tinycoffee/external/miniaudio.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugin.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/editor/tileset.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/lua/init.lua.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/tclua.h",
		"/home/canoi/Documentos/Projects/tinycoffee/external/lua/src/lua.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/lua/window.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/lua/math.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/lua/timer.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/lua/json.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/lua/graphics.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/lua/filesystem.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/lua/init.lua",
		"/home/canoi/Documentos/Projects/tinycoffee/bin/main.lua",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/objects/lizard.lua",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/lua/editor.h",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/systems/gravitysystem.lua",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/components/gravity.lua",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/systems/movesystem.lua",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/systems/kinematicsystem.lua",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/components/kinematic.lua",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/components/hitbox.lua",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/components/input.lua",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/entities/player.lua",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/systems/inputsystem.lua",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/components/player.lua",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/entities/lizard.lua",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/entities/floor.lua",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/components/velocity.lua",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/components/sprite.lua",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/components/position.lua",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/editor/image.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/resources/sprite.h",
		"/home/canoi/Documentos/Projects/tinycoffee/examples/level/objects/player.lua",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/lua/audio.h",
		"/home/canoi/Documentos/Projects/tinycoffee/include/plugins/lua/input.h",
		"/home/canoi/Documentos/Projects/tinycoffee/src/plugin.c",
		"/home/canoi/Documentos/Projects/tinycoffee/src/window.c",
		"/home/canoi/Documentos/Projects/tinycoffee/external/luajit/src/host/minilua.c",
		"/home/canoi/Documentos/Projects/tinycoffee/src/json.c.old",
		"/home/canoi/Documentos/Projects/tinycoffee/external/cimgui/cimgui.h",
		"/home/canoi/Documentos/Projects/tinycoffee/bin/init.lua",
		"/home/canoi/Documentos/Projects/tinycoffee/src/pluginc",
		"/home/canoi/Documentos/Projects/tinycoffee/src/tico.h",
		"/home/canoi/Documentos/Projects/tinycoffee/src/include/audio.h",
		"/home/canoi/Documentos/Projects/tinycoffee/src/include/graphics.h",
		"/home/canoi/public_html/blog/app/Feed.php",
		"/home/canoi/Documentos/Projects/engine-tests/tico/src/external/cimgui/cimgui.h",
		"/home/canoi/Documentos/Projects/engine-tests/tico/src/external/linmath.h",
		"/home/canoi/Documentos/Projects/engine-tests/tico/src/window.h",
		"/home/canoi/Documentos/Projects/engine-tests/tico/examples/level/main.lua",
		"/home/canoi/Documentos/Projects/engine-tests/tico/examples/level/tileset.json",
		"/home/canoi/Documentos/Projects/engine-tests/tico/examples/metroidvania/systems/kinematicsystem.lua",
		"/home/canoi/Documentos/Projects/engine-tests/tico/README.md",
		"/home/canoi/Documentos/Projects/engine-tests/tico/src/input.c",
		"/home/canoi/Documentos/Projects/engine-tests/tico/src/scripting/lua/graphics.h",
		"/home/canoi/Documentos/Projects/engine-tests/tico/tileset.json",
		"/home/canoi/Documentos/Projects/engine-tests/tico/examples/metroidvania/scenes/map.lua",
		"/home/canoi/Documentos/Projects/engine-tests/tico/src/tico.h",
		"/home/canoi/Documentos/Projects/engine-tests/tico/examples/level/resources.json",
		"/home/canoi/Documentos/Projects/engine-tests/tico/main.c",
		"/home/canoi/Documentos/Projects/engine-tests/tico/src/scripting/lua/resources.h",
		"/home/canoi/Documentos/Projects/engine-tests/tico/src/resources.c",
		"/home/canoi/Documentos/Projects/engine-tests/tico/src/core.c",
		"/home/canoi/Documentos/Projects/engine-tests/tico/src/scripting/lua/init.lua",
		"/home/canoi/Documentos/Projects/engine-tests/tico/src/graphics.c",
		"/home/canoi/Documentos/Projects/engine-tests/tico/src/render.c",
		"/home/canoi/Documentos/Projects/engine-tests/tico/main1.lua"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 148.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"set_string",
			"item",
			"prev",
			"cm_create_str",
			"->name",
			"field",
			"CM_API",
			"cm_object_set",
			"field",
			"_table",
			"function",
			"userdataf",
			"field",
			"userdata",
			"_userdata",
			"cm_object_to_opt_userdata",
			"_userdata",
			";",
			"CM_API ",
			"cm_vm_",
			"cm_vm_t",
			"own_meta",
			"cm_vm_t",
			"2",
			"obj->name[",
			"obj->name",
			"obj->str",
			"obj->string[0]",
			"field",
			"create_str",
			"array_to_vec",
			"vec2_from_array",
			"CUSTOM",
			"custom",
			"cm_vec3_from_array",
			"cm_object_t*",
			"next",
			"i",
			"old",
			"el",
			"el_",
			"&count",
			" );",
			"el",
			"char_",
			"&",
			"el",
			"el_str_len",
			"from_arra",
			"2",
			"CM_API",
			"cJSON",
			"element",
			"strcat",
			"}",
			"{",
			"// str = realloc(str, el_str_len);\n        // strcat(str, null);\n        break;\n      }",
			"}",
			"{",
			"calloc",
			"const char *",
			"str_len",
			"boolelean",
			"null",
			"element",
			"p",
			"init",
			"element",
			"cm_object_load",
			"b,",
			"CM_VEC2",
			"CM_API",
			"element",
			"array",
			"element",
			"COFFEE_",
			"field",
			", cm_object_t *meta)",
			"CM_TYPE_",
			"CM_TYPE_DEF",
			"COFFEE_TDEF",
			"CM_TYPE_",
			"TCOFFEE_",
			"TCOFFEE_MAX",
			"CM_TYPE_",
			"TCOFFEE_",
			"CM_TYPE_NUMBER",
			"TCOFFEE_NULL"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"coffee_machine_t",
			"",
			"COFFEE_T_"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "main.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1213,
						"regions":
						{
						},
						"selection":
						[
							[
								724,
								724
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 169.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "coffee.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8274,
						"regions":
						{
						},
						"selection":
						[
							[
								2791,
								2791
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1357.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "coffee.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 45182,
						"regions":
						{
						},
						"selection":
						[
							[
								45182,
								45182
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 21657.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "coffee-machine.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 120,
						"regions":
						{
						},
						"selection":
						[
							[
								120,
								120
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 149,
						"regions":
						{
						},
						"selection":
						[
							[
								33,
								33
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": ".gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 32,
						"regions":
						{
						},
						"selection":
						[
							[
								32,
								32
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Theme - Afterglow/Prefs/Langs/Git.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "tilemap.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 537,
						"regions":
						{
						},
						"selection":
						[
							[
								407,
								407
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "project.tico",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 648,
						"regions":
						{
						},
						"selection":
						[
							[
								27,
								27
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "teste.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 327,
						"regions":
						{
						},
						"selection":
						[
							[
								63,
								63
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "transform.coffee",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 119,
						"regions":
						{
						},
						"selection":
						[
							[
								117,
								117
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 58.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.diagnostics":
	{
		"height": 103.0
	},
	"output.exec":
	{
		"height": 207.0
	},
	"output.files_to_be_deleted":
	{
		"height": 115.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "build",
	"project": "coffee-machine.sublime-project",
	"replace":
	{
		"height": 69.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"edi",
				"src/editor.c"
			],
			[
				"edit",
				"src/editor.c"
			],
			[
				"micru",
				"src/ui/microui.c"
			],
			[
				"main.l",
				"examples/level/main.lua"
			],
			[
				"tico.",
				"src/tico.h"
			],
			[
				"main.la",
				"examples/level/main.lua"
			],
			[
				"main.lua",
				"examples/level/main.lua"
			],
			[
				"core.",
				"src/core.c"
			],
			[
				"main",
				"main.c"
			],
			[
				"",
				"tileset.json"
			],
			[
				"tilest",
				"tileset.json"
			],
			[
				"m",
				"main.c"
			],
			[
				"t",
				"tileset.json"
			],
			[
				"ti",
				"tileset.json"
			],
			[
				"tile",
				"tileset.json"
			],
			[
				"til",
				"tileset.json"
			],
			[
				"tileset",
				"tileset.json"
			],
			[
				"micr",
				"src/ui/microui.c"
			],
			[
				"micro",
				"src/ui/microui.c"
			],
			[
				"tico.h",
				"src/tico.h"
			],
			[
				"render",
				"src/render.c"
			],
			[
				"co",
				"src/core.c"
			],
			[
				"core",
				"src/core.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Documentos/Projects/engine-tests/tico/tico.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 605.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 240.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
